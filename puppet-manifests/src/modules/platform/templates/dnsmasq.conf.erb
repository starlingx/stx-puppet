# Only listen on the following interfaces
<%- if @pxeboot_interface != nil -%>
interface=<%= @pxeboot_interface %>
<%- end -%>
interface=<%= @mgmt_interface %>
bind-interfaces
listen-address=<%= @mgmt_controller_address %>

# Serve addresses from the pxeboot subnet
dhcp-range=set:pxeboot,<%= @pxeboot_subnet_start %>,<%= @pxeboot_subnet_end %>,<%= @pxeboot_subnet_netmask %>,1h

# Serve addresses from the management subnet
dhcp-range=set:mgmt,<%= @mgmt_subnet_start %>,static,<%= @mgmt_subnet_netmask %>,1d

<%- if @mgmt_subnet_version == 4 -%>
<%- if @mgmt_gateway_address != nil -%>
dhcp-option=tag:mgmt,option:router,<%= @mgmt_gateway_address %>
<%- else -%>
# Use the floating controller address as the default route
dhcp-option=tag:mgmt,option:router,<%= @mgmt_controller_address %>
<%- end -%>
<%- end -%>

# Provide DNS services on the floating pxeboot address
dhcp-option=tag:pxeboot,option:dns-server,<%= @pxeboot_controller_address %>

<%- if @mgmt_subnet_version == 4 -%>
# Provide DNS services on the floating management address
dhcp-option=tag:mgmt,option:dns-server,<%= @mgmt_controller_address %>
dhcp-option=tag:mgmt,option:mtu,<%= @mgmt_network_mtu %>
<%- else -%>
dhcp-option=tag:mgmt,option6:dns-server,[<%= @mgmt_controller_address %>]
<%- end -%>

# Provide private option 224 as install_uuid
dhcp-option=224,<%= @install_uuid %>
dhcp-option=option6:224,<%= @install_uuid %>

# Configure PXE boot

# Enable UEFI support
# We use a different bootloader if the client is configured
# to UEFI vs BIOS (Legacy)
#           Type   Architecture Name
#           ----   -----------------
#             0    Intel x86PC
#             1    NEC/PC98
#             2    EFI Itanium
#             3    DEC Alpha
#             4    Arc x86
#             5    Intel Lean Client
#             6    EFI IA32
#             7    EFI BC (EFI Byte Code)
#             8    EFI Xscale
#             9    EFI x86-64
#
dhcp-match=set:efi,option:client-arch,2
dhcp-match=set:efi,option:client-arch,6
dhcp-match=set:uefi,option:client-arch,7
dhcp-match=set:efi,option:client-arch,8
dhcp-match=set:efi,option:client-arch,9
dhcp-match=set:bios,option:client-arch,0
dhcp-match=set:bios,option:client-arch,1
dhcp-match=set:bios,option:client-arch,3
dhcp-match=set:bios,option:client-arch,4
dhcp-match=set:bios,option:client-arch,5

# TFTP support
enable-tftp
tftp-max=200
<%- if @pxeboot_interface != nil -%>
tftp-root=/pxeboot,<%= @pxeboot_interface %>
<%- else -%>
tftp-root=/pxeboot,<%= @mgmt_interface %>
<%- end -%>

dhcp-boot=tag:bios,tag:pxeboot,pxelinux.0,<%= @pxeboot_hostname %>,<%= @pxeboot_controller_address %>
dhcp-boot=tag:bios,tag:mgmt,pxelinux.0,<%= @mgmt_hostname %>,<%= @mgmt_controller_address %>

dhcp-boot=tag:efi,tag:pxeboot,EFI/grubx64.efi,<%= @pxeboot_hostname %>,<%= @pxeboot_controller_address %>
dhcp-boot=tag:efi,tag:mgmt,EFI/grubx64.efi,<%= @mgmt_hostname %>,<%= @mgmt_controller_address %>

dhcp-boot=tag:uefi,tag:pxeboot,EFI/shim.efi,<%= @pxeboot_hostname %>,<%= @pxeboot_controller_address %>
dhcp-boot=tag:uefi,tag:mgmt,EFI/shim.efi,<%= @mgmt_hostname %>,<%= @mgmt_controller_address %>

# Do not forward queries for plain names (no dots)
domain-needed
# Query the upstream servers in the order they appear. This is necessary when
# kubernetes is configured, to ensure we send queries for kubernetes names
# (ending in .cluster.local) to the kubernetes dns server first. In the future,
# we could add the kubernetes dns server using the "server" option, which would
# allow us to force all cluster.local names to go to that server.
strict-order
# Only keep entries in the cache for 5 seconds. This is required because the
# kubernetes dns server will reply to queries for services that do not yet
# exist with an SOA record containing a long TTL, which will result in dns
# queries failing for a very long time, even after the service comes up (e.g.
# after a host is rebooted).
max-cache-ttl=5
# The CNAME entry below will only cause dnsmasq to respond to queries
# that match the address family.  Therefore dnsmasq will forward
# queries to the external servers for local domain queries that don't
# match the request record type (i.e. A or AAAA records).
# This line will prevent all requests with the .local domain from
# being forwarded to external servers.  This will ensure registry.local
# is not forwarded in all cases, regardless of record type being
# requested.
local=/local/
port=53
bogus-priv
clear-on-reload
user=root

# Invoke this script for each lease
dhcp-script=/usr/bin/sysinv-dnsmasq-lease-update

# Dynamic files are located on a replicated filesystem
dhcp-hostsfile=<%= @config_path %>/dnsmasq.hosts
dhcp-leasefile=<%= @config_path %>/dnsmasq.leases
addn-hosts=<%= @config_path %>/dnsmasq.addn_hosts
# File for distributed cloud subcloud ip translation
addn-hosts=<%= @config_path %>/dnsmasq.addn_hosts_dc

# Set server to Kubernetes coredns cluster IP
<%- if @dns_service_ip != nil -%>
server=/<%= @service_domain %>/<%= @dns_service_ip %>
<%- end -%>

# Local CNAME records
cname=registry.local,controller
cname=registry-token-server.local,controller

<%- if @distributed_cloud_role == 'systemcontroller' -%>
cname=registry.central,controller
<%- end -%>

<%- if @distributed_cloud_role == 'subcloud' -%>
<%- if @is_virtual_system == true and @sc_mgmt_address != nil -%>
# For virtual subcloud (StarlingX running in Openstack Nova VM - QEMU/KVM),
# there is no physical OAM interface (no external network access) to connect
# to central-cloud's local registry, so central registry is exposed on the
# MGMT interface and "registry.central" domain needs to be set to system
# controller's MGMT IP to allow subcloud to pull images from central registry
# via the MGMT interface.
address=/registry.central/<%= @sc_mgmt_address %>
# The "registry.local" domain needs to be explicitly specified with subcloud's
# MGMT IP as dcorch synchronizes the dns server on subcloud with system controller's
# dns server which cannot be reached on subcloud.
address=/registry.local/<%= @mgmt_controller_address %>
<%- else -%>
# For regular DC, central-cloud's local registry is exposed on the OAM interface
# (to provide the ability to push images externally to central registry), so set
# "registry.central" to system controller's OAM IP on subcloud to allow subcloud
# to pull images from central registry via the OAM interface.
address=/registry.central/<%= @sc_address %>
<%- end -%>
<%- end -%>
