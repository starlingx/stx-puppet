root = "/var/lib/docker"
state = "/var/run/containerd"
oom_score = 0

[grpc]
  address = "/var/run/containerd/containerd.sock"
  uid = 0
  gid = 0
  max_recv_message_size = 16777216
  max_send_message_size = 16777216

[debug]
  address = ""
  uid = 0
  gid = 0
  level = ""

[metrics]
  address = ""
  grpc_histogram = false

[cgroup]
  path = ""

[plugins]
  [plugins.cgroups]
    no_prometheus = false
  [plugins.cri]
    stream_server_address = "<%= @stream_server_address %>"
    stream_server_port = "0"
    enable_selinux = false
    sandbox_image = "registry.local:9001/k8s.gcr.io/pause:3.2"
    stats_collect_period = 10
    systemd_cgroup = false
    enable_tls_streaming = false
    max_container_log_line_size = 16384
    [plugins.cri.containerd]
      snapshotter = "overlayfs"
      no_pivot = false
      default_runtime_name = "runc"
      [plugins.cri.containerd.runtimes]
        [plugins.cri.containerd.runtimes.runc]
          runtime_type = "io.containerd.runc.v1"
          [plugins.cri.containerd.runtimes.runc.options]
            NoPivotRoot = false
            NoNewKeyring = false
            ShimCgroup = ""
            IoUid = 0
            IoGid = 0
            BinaryName = "runc"
            Root = ""
            CriuPath = ""
            SystemdCgroup = false
        [plugins.cri.containerd.runtimes.kata]
          runtime_type = "io.containerd.kata.v2"
        [plugins.cri.containerd.runtimes.katacli]
          runtime_type = "io.containerd.runc.v1"
          [plugins.cri.containerd.runtimes.katacli.options]
            NoPivotRoot = false
            NoNewKeyring = false
            ShimCgroup = ""
            IoUid = 0
            IoGid = 0
            BinaryName = "/usr/bin/kata-runtime"
            Root = ""
            CriuPath = ""
            SystemdCgroup = false
        [plugins.cri.containerd.runtimes.untrusted]
          runtime_type = "io.containerd.kata.v2"
          runtime_engine = ""
          runtime_root = ""
<%- if @custom_container_runtime -%>
<%- @custom_container_runtime.each do |cri| -%>
        [plugins.cri.containerd.runtimes.<%= cri[0] %>]
          runtime_type = "io.containerd.runc.v1"
          [plugins.cri.containerd.runtimes.<%= cri[0] %>.options]
            BinaryName = "<%= cri[1] %>"
<%- end -%>
<%- end -%>

    [plugins.cri.cni]
      # conf_dir is the directory in which the admin places a CNI conf.
      conf_dir = "/etc/cni/net.d"
      bin_dir = "<%= @k8s_cni_bin_dir %>"
      max_conf_num = 1
      conf_template = ""
    [plugins.cri.registry]
      [plugins.cri.registry.mirrors]
        # Begin of insecure registries
<%- @insecure_registries.each do |insecure_registry| -%>
        [plugins.cri.registry.mirrors."<%= insecure_registry %>"]
          endpoint = ["http://<%= insecure_registry %>"]
<%- end -%>
        # End of insecure registries
    [plugins.cri.registry.configs."registry.local:9001".tls]
      ca_file = "/etc/docker/certs.d/registry.local:9001/registry-cert.crt"
    [plugins.cri.registry.configs."registry.local:9001".auth]
      auth = "<%= @registry_auth %>"
# Central cloud registry config for distributed cloud subclouds
<%- if @distributed_cloud_role == 'subcloud' -%>
    [plugins.cri.registry.configs."registry.central:9001".tls]
      ca_file = "/etc/docker/certs.d/registry.central:9001/registry-cert.crt"
<%- end -%>
# End central cloud registry config for distributed cloud subclouds
    [plugins.cri.x509_key_pair_streaming]
      tls_cert_file = ""
      tls_key_file = ""
  [plugins.diff-service]
    default = ["walking"]
  [plugins.linux]
    shim = "containerd-shim"
    runtime = "runc"
    runtime_root = ""
    no_shim = false
    shim_debug = false
  [plugins.opt]
    path = "/opt/containerd"
  [plugins.restart]
    interval = "10s"
  [plugins.scheduler]
    pause_threshold = 0.02
    deletion_threshold = 0
    mutation_threshold = 100
    schedule_delay = "0s"
    startup_delay = "100ms"
